//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;




namespace Model
{
    [Config]
    public partial class MultipleKeyConfigCategory : ACategory<MultipleKeyConfig>
    {
        public static MultipleKeyConfigCategory Instance { get; private set; }

        public MultipleKeyConfigCategory()
        {
            Instance = this;
        }


        private Dictionary<string, MultipleKeyConfig> _group = new();

        public override AConfig GetOne()
        {
            foreach(var v in _group.Values)
            {
                return v;
            }
            return null;
        }

        public override AConfig[] GetAll()
        {
            return _group.Values.ToArray();
        }
        
        public override AConfig TryGet(int id)
        {
            throw new NotImplementedException();
        }

        private string _GetKey(string key_1,int key_2,long key_3)
        {
            return $"{ key_1 }*&^{ key_2 }*&^{ key_3 }*&^";
        }

        protected override void _CustomDeserialize(string json, JsonSerializerSettings settings)
        {
            var list = JsonConvert.DeserializeObject<List<MultipleKeyConfig>>(json, settings);
            
            foreach(var v in list)
            {
                v.EndInit();
            }

            foreach(var v in list)
            {
                _group.Add(_GetKey(v.key_1,v.key_2,v.key_3), v);
            }
        }

        public MultipleKeyConfig TryGet(string key_1,int key_2,long key_3)
        {
            _group.TryGetValue(_GetKey(key_1,key_2,key_3), out var result);
            return result;
        }


    }
}
